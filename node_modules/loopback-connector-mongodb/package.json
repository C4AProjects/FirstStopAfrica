{
  "name": "loopback-connector-mongodb",
  "version": "1.11.3",
  "description": "LoopBack MongoDB Connector",
  "keywords": [
    "StrongLoop",
    "LoopBack",
    "MongoDB",
    "DataSource",
    "Connector"
  ],
  "main": "index.js",
  "scripts": {
    "benchmarks": "make benchmarks",
    "leak-detection": "make leak-detection",
    "test": "make test"
  },
  "dependencies": {
    "loopback-connector": "^2.2.0",
    "mongodb": "~2.0.35",
    "async": "^1.0.0",
    "debug": "^2.1.1"
  },
  "devDependencies": {
    "benchmark": "^1.0.0",
    "bluebird": "^2.9.12",
    "loopback-datasource-juggler": "^2.28.0",
    "memwatch-next": "^0.2.6",
    "mocha": "^2.1.0",
    "rc": "^1.0.0",
    "semver": "^4.2.0",
    "should": "^5.0.0",
    "sinon": "^1.14.1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/strongloop/loopback-connector-mongodb"
  },
  "license": {
    "name": "Dual MIT/StrongLoop",
    "url": "https://github.com/strongloop/loopback-connector-mongodb/blob/master/LICENSE"
  },
  "readme": "## loopback-connector-mongodb\n\nMongoDB connector for loopback-datasource-juggler.\n\nPlease see the full documentation at [docs.strongloop.com](http://docs.strongloop.com/display/LB/MongoDB+connector).\n\n## Customizing MongoDB configuration for tests/examples\n\nBy default, examples and tests from this module assume there is a MongoDB server\ninstance running on localhost at port 27017.\n\nTo customize the settings, you can drop in a `.loopbackrc` file to the root directory\nof the project or the home folder.\n\n**Note**: Tests and examples in this project configure the data source using the deprecated '.loopbackrc' file method, \nwhich is not suppored in general.\nFor information on configuring the connector in a LoopBack application, please refer to [LoopBack documentation](http://docs.strongloop.com/display/LB/MongoDB+connector).\n\nThe .loopbackrc file is in JSON format, for example:\n\n    {\n        \"dev\": {\n            \"mongodb\": {\n                \"host\": \"127.0.0.1\",\n                \"database\": \"test\",\n                \"username\": \"youruser\",\n                \"password\": \"yourpass\",\n                \"port\": 27017\n            }\n        },\n        \"test\": {\n            \"mongodb\": {\n                \"host\": \"127.0.0.1\",\n                \"database\": \"test\",\n                \"username\": \"youruser\",\n                \"password\": \"yourpass\",\n                \"port\": 27017\n            }\n        }\n    }\n\n**Note**: username/password is only required if the MongoDB server has\nauthentication enabled.\n\n###Additional Settings \n\nallowExtendedOperators - ```false``` by default, ```true``` allows to use mongo operators like \n```$currentDate, $inc, $max, $min, $mul, $rename, $setOnInsert, $set, $unset, $addToSet, \n$pop, $pullAll, $pull, $pushAll, $push,  $bit ```.\n\n\n## Running tests\n\nThe tests in this repository are mainly integration tests, meaning you will need\nto run them using our preconfigured test server.\n\n1. Ask a core developer for instructions on how to set up test server\n   credentials on your machine\n2. `npm test`\n\n## Running benchmarks\n\n**Benchmarks must be run on a Unix-like operating system.**\n\n```\nmake benchmarks\n```\n\nThe results will be output in `./benchmarks/results.md`.\n\n## Leak detection\n\nTests run for 100 iterations by default, but can be increased by setting the\nenv var `ITERATIONS`.\n\n```\nmake leak-detection # run 100 iterations (default)\n```\n\nor\n\n```\nITERATIONS=1000 make leak-detection # run 1000 iterations\n```\n\n## Release notes\n\n  * 1.1.7 - Do not return MongoDB-specific _id to client API, except if specifically specified in the model definition\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/strongloop/loopback-connector-mongodb/issues"
  },
  "homepage": "https://github.com/strongloop/loopback-connector-mongodb",
  "_id": "loopback-connector-mongodb@1.11.3",
  "_from": "loopback-connector-mongodb@"
}
